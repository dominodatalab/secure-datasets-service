apiVersion: apps.dominodatalab.com/v1alpha1
kind: Mutation
metadata:
  name: "{{ .Values.env.name }}-mutation-wks"
  namespace: domino-platform
rules:
- jqSelector:
      query: |
        include "domsed/selectors/common";
        $__kind__ == "Pod" and
        (.metadata.labels."dominodatalab.com/workload-type" | isIn(["Workspace"])) and
        (.metadata.labels."dominodatalab.com/starting-user-username" != "integration-test")
  insertVolumeMounts:
    containerSelector:
      - run
    volumeMounts:
      - name: domino-shared-store-domino-compute-vol
        mountPath: "{{ printf "/secure/datasets/data/{{ object['metadata']['labels']['dominodatalab.com/starting-user-username'] }}/{{ object['metadata']['labels']['dominodatalab.com/starting-user-username'] }}" }}"
        subPath: "{{ printf  "secure/datasets/data/{{ object['metadata']['labels']['dominodatalab.com/starting-user-username'] }}/{{ object['metadata']['labels']['dominodatalab.com/starting-user-username'] }}" }}"
        readOnly: true
      - name: domino-shared-store-domino-compute-vol
        mountPath: "{{ printf "/secure/datasets/metadata/{{ object['metadata']['labels']['dominodatalab.com/starting-user-username'] }}/{{ object['metadata']['labels']['dominodatalab.com/starting-user-username'] }}" }}"
        subPath: "{{ printf "secure/datasets/metadata/{{ object['metadata']['labels']['dominodatalab.com/starting-user-username'] }}/{{ object['metadata']['labels']['dominodatalab.com/starting-user-username'] }}" }}"
        readOnly: true
      - name: "{{ .Values.env.name }}-certs"
        mountPath: /secure-datasets-ssl
        readOnly: true
  insertVolumes:
    - name: "{{ .Values.env.name }}-certs"
      secret:
        secretName: "{{ .Values.env.name }}-certs"
- jqSelector:
      query: |
        include "domsed/selectors/common";
        $__kind__ == "Pod" and
        (.metadata.labels."dominodatalab.com/workload-type" | isIn(["Workspace"])) and
        (.metadata.labels."dominodatalab.com/starting-user-username" == "integration-test")
  insertVolumeMounts:
    containerSelector:
      - run
    volumeMounts:
      - name: domino-shared-store-domino-compute-vol
        mountPath: /secure/datasets/data
        subPath: secure/datasets/data
        readOnly: true
      - name: domino-shared-store-domino-compute-vol
        mountPath: secure/datasets/metadata
        subPath: secure/datasets/metadata
        readOnly: true
      - name: "{{ .Values.env.name }}-certs"
        mountPath: /secure-datasets-ssl
        readOnly: true
  insertVolumes:
    - name: "{{ .Values.env.name }}-certs"
      secret:
        secretName: "{{ .Values.env.name }}-certs"

